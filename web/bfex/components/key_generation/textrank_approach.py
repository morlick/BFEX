from bfex.components.key_generation.key_generation_approach import KeyGenerationApproach
from bfex.components.key_generation.textrank.summa import keywords as textrank
from bfex.components.scraper.scrapp import Scrapp
import io


class TextrankApproach(KeyGenerationApproach):
    def __init__(self):
        self.description = """ Generate keyword with Textrank, extract keywords base on finding multi-word phrases containing frequent words, and filter it with stop words """
        self.approach_id = 2

    def generate_keywords(self, text):
        """ Generate keyword with Textrank, extract keywords base on finding multi-word phrases containing frequent words, and filter it with stop words

        :param text is the text field from a faculty object
        :return: keywords as generated by Textrank algorithm
        """
        keywords = textrank.keywords(
            text, ratio=0.2, words=None, split=True, scores=False, deaccent=False)
        return keywords

    def get_id(self):
        return self.approach_id
